def static jacocoExcludes() {
  return [
      '**/io/github/aj8gh/**/Application.*',
  ]
}

tasks.named('check') {
  dependsOn tasks.named('testCodeCoverageReport', JacocoReport)
}

testCodeCoverageReport {
  afterEvaluate {
    classDirectories.setFrom(files(classDirectories.files.collect {
      fileTree(dir: it, exclude: jacocoExcludes())
    }))
  }
}

subprojects {
  apply plugin: 'jacoco'

  jacocoTestReport {
    dependsOn test
    afterEvaluate {
      classDirectories.setFrom(files(classDirectories.files.collect {
        fileTree(dir: it, exclude: jacocoExcludes())
      }))
    }
  }

  jacocoTestCoverageVerification {
    violationRules {
      rule {
        limit {
          minimum = new BigDecimal(minimumCoverage)
        }
      }
      setFailOnViolation(Boolean.valueOf(shouldFailOnViolation))
    }
  }
}
